{"version":3,"sources":["components/UI/Input/Input.jsx","components/UI/Input/Input.module.css","containers/Auth/Auth.module.css","containers/Auth/Auth.jsx"],"names":["Input","props","inputElement","inputClasses","classes","InputElement","validationError","className","ValidationError","isValid","shouldValidation","touched","push","Invalid","Valid","elementType","join","elementConfig","value","onChange","change","style","margin","options","map","option","key","displayValue","module","exports","Auth","state","controls","email","type","placeholder","valid","validation","required","isEmail","name","minLength","maxLength","password","confirmPassword","isSignup","checkValidity","rules","errsMessage","trim","length","test","handleChange","e","id","updatedControls","updatedControlElement","target","setState","onSubmitForm","preventDefault","onAuth","this","building","authRedirectPath","onSetAuthRedirectPath","match","url","split","prevProps","prevState","formElementArray","config","form","onSubmit","FormTitle","formElement","event","btnType","variant","loading","errorMessage","error","color","message","isAuthenticated","to","React","Component","connect","auth","token","burgerBuilder","dispatch","actions","path","withErrorHandler","axios"],"mappings":"wHAAA,sCAkEeA,IAhED,SAACC,GACb,IAAIC,EAAe,KACfC,EAAe,CAACC,IAAQC,cACxBC,EAAmB,uBAAGC,UAAWH,IAAQI,iBAAkBP,EAAMK,iBAQrE,QAPIL,EAAMQ,SAAWR,EAAMS,kBAAoBT,EAAMU,SACnDR,EAAaS,KAAKR,IAAQS,SAEzBZ,EAAMQ,SAAWR,EAAMS,kBAAoBT,EAAMU,SAClDR,EAAaS,KAAKR,IAAQU,OAGpBb,EAAMc,aACZ,IAAK,QACHb,EACE,yCACEK,UAAWJ,EAAaa,KAAK,MACzBf,EAAMgB,cAFZ,CAGEC,MAAOjB,EAAMiB,MACbC,SAAUlB,EAAMmB,OAChBC,MAAOf,EAAkB,CAACgB,OAAS,KAAO,CAACA,OAAS,aAGxD,MACF,IAAK,WACHpB,EACE,4CACEK,UAAWJ,EAAaa,KAAK,MACzBf,EAAMgB,cAFZ,CAGEC,MAAOjB,EAAMiB,MACbC,SAAUlB,EAAMmB,UAGpB,MACF,IAAK,SACHlB,EACE,4BACEK,UAAWJ,EAAaa,KAAK,KAC7BE,MAAOjB,EAAMiB,MACbC,SAAUlB,EAAMmB,QAEfnB,EAAMgB,cAAcM,QAAQC,KAAI,SAACC,GAAD,OAC/B,4BAAQC,IAAKD,EAAOP,MAAOA,MAAOO,EAAOP,OACtCO,EAAOE,kBAKhB,MACF,QACEzB,EACE,yCACEK,UAAWJ,EAAaa,KAAK,MACzBf,EAAMgB,cAFZ,CAGEC,MAAOjB,EAAMiB,MACbC,SAAUlB,EAAMmB,UAIxB,OAAO,yBAAKb,UAAWH,IAAQJ,OAC5BE,EACAI,K,oBC7DLsB,EAAOC,QAAU,CAAC,aAAe,4BAA4B,QAAU,uBAAuB,MAAQ,qBAAqB,gBAAkB,iC,oBCA7ID,EAAOC,QAAU,CAAC,KAAO,mBAAmB,UAAY,0B,iLCSlDC,E,4MACJC,MAAQ,CACNC,SAAW,CACTC,MAAQ,CACNlB,YAAc,QACdE,cAAgB,CACdiB,KAAO,OACPC,YAAc,SAEhBC,OAAQ,EACRC,WAAa,CACXC,UAAU,EACVC,SAAU,GAEZrB,MAAQ,GACRP,SAAU,EACVL,gBAAkB,IAEpBkC,KAAO,CACLzB,YAAc,QACdE,cAAgB,CACdiB,KAAO,OACPC,YAAc,QAEhBC,OAAQ,EACRC,WAAa,CACXC,UAAW,EACXG,UAAY,EACZC,UAAY,IAEdxB,MAAQ,GACRP,SAAU,EACVL,gBAAkB,IAEpBqC,SAAW,CACT5B,YAAc,QACdE,cAAgB,CACdiB,KAAO,WACPC,YAAc,YAEhBE,WAAa,CACXC,UAAW,EACXG,UAAY,GAEdvB,MAAQ,GACRP,SAAU,EACVL,gBAAkB,IAEpBsC,gBAAkB,CAChB7B,YAAc,QACdE,cAAgB,CACdiB,KAAO,WACPC,YAAc,oBAEhBE,WAAa,CACXC,UAAW,GAEbpB,MAAQ,GACRP,SAAU,EACVL,gBAAkB,KAGtBuC,UAAW,G,EAmBbC,cAAgB,SAAC5B,EAAO6B,GACtB,IAAItC,GAAU,EACVuC,EAAc,GAqBlB,GApBGD,EAAMT,YACP7B,EAAUS,EAAM+B,OAAOC,QAAUzC,IAE/BuC,EAAYpC,KAAK,2BAGlBmC,EAAMN,aACPhC,EAAUS,EAAM+B,OAAOC,QAAUH,EAAMN,WAAahC,IAElDuC,EAAYpC,KAAZ,mBAA6BmC,EAAMN,UAAnC,iBAIDM,EAAML,aACPjC,EAAUS,EAAM+B,OAAOC,QAAUH,EAAML,WAAajC,IAElDuC,EAAYpC,KAAZ,kBAA4BmC,EAAML,UAAlC,iBAIDK,EAAMR,QAAQ,EAEf9B,EADiB,0JACC0C,KAAKjC,IAAUT,IAE/BuC,EAAYpC,KAAZ,sBAGJ,MAAO,CAAEwB,MAAQ3B,EAAUuC,YAAcA,EAAYhC,KAAK,Q,EAI5DoC,aAAe,SAACC,EAAGC,GACjB,IAAIC,EAAe,eAAO,EAAKxB,MAAMC,UACjCwB,EAAqB,eAAOD,EAAgBD,IAChDE,EAAsBtC,MAAQmC,EAAEI,OAAOvC,MACvCsC,EAAsBpB,MAAQ,EAAKU,cAAcO,EAAEI,OAAOvC,MAAOsC,EAAsBnB,YAAYD,MACnGoB,EAAsB7C,SAAU,EAChC6C,EAAsBlD,gBAAkB,EAAKwC,cAAcO,EAAEI,OAAOvC,MAAOsC,EAAsBnB,YAAYW,YAC7GO,EAAgBD,GAAME,EACtB,EAAKE,SAAS,CAAC1B,SAAWuB,K,EAG5BI,aAAe,SAAAN,GACbA,EAAEO,iBACF,EAAK3D,MAAM4D,OAAO,EAAK9B,MAAMC,SAASC,MAAMf,MAAO,EAAKa,MAAMC,SAASW,SAASzB,MAAO,EAAKa,MAAMc,W,kEA9D9FiB,KAAK7D,MAAM8D,UAA4C,MAAhCD,KAAK7D,MAAM+D,kBACpCF,KAAK7D,MAAMgE,sBAAsB,O,2CAKnCH,KAAKJ,SAAS,CAACb,SAAiD,aAAvCiB,KAAK7D,MAAMiE,MAAMC,IAAIC,MAAM,KAAK,O,yCAGxCC,EAAWC,GACzBR,KAAK7D,MAAMiE,MAAMC,MAAQE,EAAUH,MAAMC,KAC1CL,KAAKJ,SAAS,CAACb,SAAkD,aAAvCiB,KAAK7D,MAAMiE,MAAMC,IAAIC,MAAM,KAAK,O,+BAsDrD,IAAD,OACFG,EAAmB,GACvB,IAAI,IAAI7C,KAAOoC,KAAK/B,MAAMC,UACpB8B,KAAK/B,MAAMc,UAAqB,SAARnB,GAA0B,oBAARA,IAG9C6C,EAAiB3D,KAAK,CACpB0C,GAAK5B,EACL8C,OAASV,KAAK/B,MAAMC,SAASN,KAGjC,IAAI+C,EACF,0BAAMC,SAAUZ,KAAKH,cACnB,wBAAIpD,UAAWH,IAAQuE,WAAYb,KAAK/B,MAAMc,SAAW,UAAY,WACpE0B,EAAiB/C,KAAK,SAAAoD,GAAW,OAChC,kBAAC,IAAD,CACElD,IAAKkD,EAAYtB,GACjBvC,YAAa6D,EAAYJ,OAAOzD,YAChCE,cAAe2D,EAAYJ,OAAOvD,cAClCC,MAAO0D,EAAYJ,OAAOtD,MAC1BP,QAASiE,EAAYJ,OAAO7D,QAC5BF,QAASmE,EAAYJ,OAAOpC,MAC5B9B,gBAAiBsE,EAAYJ,OAAOlE,gBACpCI,iBAAkBkE,EAAYJ,OAAOnC,WACrCjB,OAAQ,SAAAyD,GAAK,OAAI,EAAKzB,aAAayB,EAAMD,EAAYtB,UAGvD,kBAAC,IAAD,CAAQwB,QAAQ,UAAUC,QAAQ,aAAajB,KAAK/B,MAAMc,SAAW,UAAY,WAGpFiB,KAAK7D,MAAM+E,UACZP,EAAO,kBAAC,IAAD,OAET,IAAIQ,EAAe,KAInB,OAHGnB,KAAK7D,MAAMiF,QACZD,EAAe,uBAAG5D,MAAO,CAAC8D,MAAQ,QAASrB,KAAK7D,MAAMiF,MAAME,UAE3DtB,KAAK7D,MAAMoF,gBACL,kBAAC,IAAD,CAAUC,GAAIxB,KAAK7D,MAAM+D,mBAEhC,yBAAKzD,UAAWH,IAAQ0B,MACrBmD,EACAR,O,GA7KUc,IAAMC,WAoMVC,uBAjBS,SAAA1D,GAAK,MAAK,CAChCiD,QAAUjD,EAAM2D,KAAKV,QACrBE,MAAQnD,EAAM2D,KAAKR,MACnBG,gBAAuC,OAArBtD,EAAM2D,KAAKC,MAC7B5B,SAAWhC,EAAM6D,cAAc7B,SAC/BC,iBAAmBjC,EAAM2D,KAAK1B,qBAGL,SAAA6B,GAAQ,MAAK,CACtChC,OAAS,SAAC5B,EAAOU,EAAUE,GACzBgD,EAASC,IAAa7D,EAAOU,EAAUE,KAEzCoB,sBAAwB,SAAA8B,GACtBF,EAASC,IAA4BC,QAI1BN,CAA6CO,YAAiBlE,EAAMmE","file":"static/js/4.2fafa09e.chunk.js","sourcesContent":["import React from \"react\";\nimport classes from \"./Input.module.css\";\nconst Input = (props) => {\n  let inputElement = null;\n  let inputClasses = [classes.InputElement];\n  let validationError  = <p className={classes.ValidationError}>{props.validationError}</p>;\n  if(!props.isValid && props.shouldValidation && props.touched){\n    inputClasses.push(classes.Invalid);\n  }\n  if(props.isValid && props.shouldValidation && props.touched){\n    inputClasses.push(classes.Valid);\n  }\n  \n  switch (props.elementType) {\n    case \"input\":\n      inputElement = (\n        <input\n          className={inputClasses.join(\" \")}\n          {...props.elementConfig}\n          value={props.value}\n          onChange={props.change}\n          style={validationError ? {margin : \"0\"} : {margin : \"1rem 0\"}}\n        />\n      );\n      break;\n    case \"textarea\":\n      inputElement = (\n        <textarea\n          className={inputClasses.join(\" \")}\n          {...props.elementConfig}\n          value={props.value}\n          onChange={props.change}        \n        />\n      );\n      break;\n    case \"select\":\n      inputElement = (\n        <select\n          className={inputClasses.join(\" \")}\n          value={props.value}\n          onChange={props.change}\n        >\n          {props.elementConfig.options.map((option) => (\n            <option key={option.value} value={option.value}>\n              {option.displayValue}\n            </option>\n          ))}\n        </select>\n      );\n      break;\n    default:\n      inputElement = (\n        <input\n          className={inputClasses.join(\" \")}\n          {...props.elementConfig}\n          value={props.value}\n          onChange={props.change}\n        />\n      );\n  }  \n  return <div className={classes.Input}>\n    {inputElement}\n    {validationError}\n    </div>;\n};\n\nexport default Input;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"InputElement\":\"Input_InputElement__2m88K\",\"Invalid\":\"Input_Invalid__16Mis\",\"Valid\":\"Input_Valid__TNEQR\",\"ValidationError\":\"Input_ValidationError__qMR97\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Auth\":\"Auth_Auth__1Zul_\",\"FormTitle\":\"Auth_FormTitle__3PoPS\"};","import React from \"react\";\nimport Button from \"../../components/UI/Button/Button\";\nimport Input from \"../../components/UI/Input/Input\";\nimport classes from \"./Auth.module.css\";\nimport {connect} from \"react-redux\";\nimport axios from \"../../axios-orders\";\nimport {Redirect} from \"react-router-dom\";\nimport * as actions from \"../../store/actions/index\";\nimport withErrorHandler from \"../../hoc/withErrorHandler/withErrorHandler\";\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\nclass Auth extends React.Component{\n  state = {\n    controls : {\n      email : {\n        elementType : \"input\",\n        elementConfig : {\n          type : \"text\",\n          placeholder : \"Email\"\n        },\n        valid : false ,\n        validation : {\n          required: true , \n          isEmail : true \n        },\n        value : \"\",\n        touched : false,\n        validationError : \"\"\n      },\n      name : {\n        elementType : \"input\",\n        elementConfig : {\n          type : \"text\",\n          placeholder : \"Name\"\n        },\n        valid : false , \n        validation : {\n          required : true , \n          minLength : 3,\n          maxLength : 50\n        },\n        value : \"\",\n        touched : false,\n        validationError : \"\"\n      },\n      password : {\n        elementType : \"input\",\n        elementConfig : {\n          type : \"password\",\n          placeholder : \"Password\"\n        },\n        validation : {\n          required : true , \n          minLength : 6\n        },\n        value : \"\",\n        touched : false,\n        validationError : \"\"\n      },\n      confirmPassword : {\n        elementType : \"input\",\n        elementConfig : {\n          type : \"password\",\n          placeholder : \"Confirm password\"\n        },\n        validation : {\n          required : true           \n        },\n        value : \"\",\n        touched : false,\n        validationError : \"\"\n      },\n    },\n    isSignup : true \n  };\n\n  componentDidMount(){\n    if(!this.props.building && this.props.authRedirectPath !== \"/\"){\n      this.props.onSetAuthRedirectPath(\"/\");\n    }\n  }\n\n  componentWillMount(){          \n    this.setState({isSignup: this.props.match.url.split(\"/\")[2] === \"register\"})  \n  }\n\n  componentDidUpdate(prevProps, prevState){      \n    if(this.props.match.url !== prevProps.match.url){\n      this.setState({isSignup : this.props.match.url.split(\"/\")[2] === \"register\" });      \n    }        \n  }\n\n  checkValidity = (value, rules) => {\n    let isValid = true ; \n    let errsMessage = [];\n    if(rules.required){\n      isValid = value.trim().length && isValid ; \n      if(!isValid){\n        errsMessage.push(\"This field is required\");\n      }\n    }\n    if(rules.minLength){\n      isValid = value.trim().length >= rules.minLength && isValid ;\n      if(!isValid){\n        errsMessage.push(`At least ${rules.minLength} characters`);\n      }\n    }\n\n    if(rules.maxLength){\n      isValid = value.trim().length <= rules.maxLength && isValid ;\n      if(!isValid){\n        errsMessage.push(`At most ${rules.maxLength} characters`);\n      }\n    }\n\n    if(rules.isEmail){\n      const pattern =  /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n      isValid = pattern.test(value) && isValid ; \n      if(!isValid){\n        errsMessage.push(`Email is not valid`);\n      }      \n    }    \n    return { valid : isValid , errsMessage : errsMessage.join(\", \")}\n  }\n\n\n  handleChange = (e, id) => {\n    let updatedControls = {...this.state.controls};\n    let updatedControlElement = {...updatedControls[id]};\n    updatedControlElement.value = e.target.value ;\n    updatedControlElement.valid = this.checkValidity(e.target.value, updatedControlElement.validation).valid;\n    updatedControlElement.touched = true ;\n    updatedControlElement.validationError = this.checkValidity(e.target.value, updatedControlElement.validation).errsMessage;\n    updatedControls[id] = updatedControlElement;\n    this.setState({controls : updatedControls})\n  }\n\n  onSubmitForm = e => {   \n    e.preventDefault();\n    this.props.onAuth(this.state.controls.email.value, this.state.controls.password.value, this.state.isSignup)\n  }\n\n  render(){        \n    let formElementArray = [];\n    for(let key in this.state.controls){\n      if(!this.state.isSignup && (key === \"name\" || key === \"confirmPassword\")){\n        continue;\n      }\n      formElementArray.push({\n        id : key ,\n        config : this.state.controls[key]\n      })\n    }        \n    let form = (\n      <form onSubmit={this.onSubmitForm}>\n        <h4 className={classes.FormTitle}>{this.state.isSignup ? \"Sign Up\" : \"Sign In\"}</h4>\n        {formElementArray.map( formElement => (\n          <Input\n            key={formElement.id}\n            elementType={formElement.config.elementType}\n            elementConfig={formElement.config.elementConfig}\n            value={formElement.config.value}\n            touched={formElement.config.touched}\n            isValid={formElement.config.valid}\n            validationError={formElement.config.validationError}\n            shouldValidation={formElement.config.validation}\n            change={event => this.handleChange(event,formElement.id)}\n          />\n        ))}\n          <Button btnType=\"primary\" variant=\"contained\">{this.state.isSignup ? \"Sign Up\" : \"Log In\"}</Button>\n      </form>\n    )\n    if(this.props.loading){\n      form = <Spinner/>\n    }\n    let errorMessage = null;\n    if(this.props.error){\n      errorMessage = <p style={{color : \"red\"}}>{this.props.error.message}</p>\n    }\n    if(this.props.isAuthenticated)\n      return <Redirect to={this.props.authRedirectPath} />\n    return (\n      <div className={classes.Auth}>\n        {errorMessage}\n        {form}      \n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  loading : state.auth.loading,\n  error : state.auth.error,\n  isAuthenticated : state.auth.token !== null,\n  building : state.burgerBuilder.building,\n  authRedirectPath : state.auth.authRedirectPath\n})\n\nconst mapDispatchToProps = dispatch => ({\n  onAuth : (email, password, isSignup) => {\n    dispatch(actions.auth(email, password, isSignup));\n  },\n  onSetAuthRedirectPath : path => {\n    dispatch(actions.setAuthRedirectPath(path))\n  }\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(Auth, axios));"],"sourceRoot":""}